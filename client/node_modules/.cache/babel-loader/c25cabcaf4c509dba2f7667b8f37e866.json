{"ast":null,"code":"var _jsxFileName = \"/Users/nicholashui/Documents/Self/food-finder/client/src/App.js\";\nimport React from 'react';\nimport Select from './components/Select';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clientData = () => {\n      if ('geolocation' in navigator) {\n        console.log('we can track you!');\n        navigator.geolocation.getCurrentPosition(async position => {\n          console.log(position.coords.latitude);\n          console.log(position.coords.longitude);\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude; //data object we are passing to the backend\n\n          const data = {\n            lat,\n            lon,\n            term,\n            cost,\n            radius,\n            sort\n          }; //(object) second parameter of fetch that allows you to change settings\n\n          const options = {\n            method: 'POST',\n            //post, we are sending data to server\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data) //data contains the info we are sending to server\n\n          }; //fetch can also send data\n          //fetch sends data to server, also recieves data. Recived data is in response\n\n          const response = await fetch('/api', options);\n          const jsonData = await response.json();\n        });\n      } else {\n        console.log('Cant see you');\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      clientData: this.clientData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nicholashui/Documents/Self/food-finder/client/src/App.js"],"names":["React","Select","App","Component","clientData","navigator","console","log","geolocation","getCurrentPosition","position","coords","latitude","longitude","lat","lon","data","term","cost","radius","sort","options","method","headers","body","JSON","stringify","response","fetch","jsonData","json","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCC,UADgC,GACnB,MAAM;AACjB,UAAG,iBAAiBC,SAApB,EAA8B;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEAF,QAAAA,SAAS,CAACG,WAAV,CAAsBC,kBAAtB,CAAyC,MAAMC,QAAN,IAAiB;AACxDJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,MAAT,CAAgBC,QAA5B;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,MAAT,CAAgBE,SAA5B;AACA,gBAAMC,GAAG,GAAGJ,QAAQ,CAACC,MAAT,CAAgBC,QAA5B;AACA,gBAAMG,GAAG,GAAGL,QAAQ,CAACC,MAAT,CAAgBE,SAA5B,CAJwD,CAMxD;;AACA,gBAAMG,IAAI,GAAG;AACTF,YAAAA,GADS;AAETC,YAAAA,GAFS;AAGTE,YAAAA,IAHS;AAITC,YAAAA,IAJS;AAKTC,YAAAA,MALS;AAMTC,YAAAA;AANS,WAAb,CAPwD,CAgBxD;;AACA,gBAAMC,OAAO,GAAG;AACZC,YAAAA,MAAM,EAAE,MADI;AACI;AAChBC,YAAAA,OAAO,EAAE;AACL,8BAAgB;AADX,aAFG;AAMZC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf,CANM,CAMe;;AANf,WAAhB,CAjBwD,CAyBxD;AACA;;AACA,gBAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,MAAD,EAASP,OAAT,CAA5B;AAEA,gBAAMQ,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAED,SA/BD;AAgCD,OAnCD,MAoCI;AACFxB,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;AACF,KAzC+B;AAAA;;AA0ChCwB,EAAAA,MAAM,GAAE;AACN,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAAK3B,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA;AAKD;;AAhD+B;;AAoDlC,eAAeF,GAAf","sourcesContent":["import React from 'react';\nimport Select from './components/Select'\nimport './App.css';\n\n\nclass App extends React.Component {\n  clientData = () => {\n    if('geolocation' in navigator){\n      console.log('we can track you!');\n\n      navigator.geolocation.getCurrentPosition(async position =>{\n        console.log(position.coords.latitude);\n        console.log(position.coords.longitude);\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        \n        //data object we are passing to the backend\n        const data = {\n            lat,\n            lon,\n            term,\n            cost,\n            radius,\n            sort\n        };\n\n        //(object) second parameter of fetch that allows you to change settings\n        const options = {\n            method: 'POST', //post, we are sending data to server\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            \n            body: JSON.stringify(data) //data contains the info we are sending to server\n        };\n        //fetch can also send data\n        //fetch sends data to server, also recieves data. Recived data is in response\n        const response = await fetch('/api', options);\n        \n        const jsonData = await response.json();\n  \n      });\n    }\n    else{\n      console.log('Cant see you');\n    }\n  }\n  render(){\n    return (\n    <div className=\"App\">\n      <Select clientData={this.clientData}/>\n    </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}