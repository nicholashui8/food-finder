{"ast":null,"code":"var _jsxFileName = \"/Users/nicholashui/Documents/Self/food-finder/client/src/App.js\";\nimport React from 'react';\nimport Select from './components/Select';\nimport Results from './components/Results';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      results: []\n    };\n\n    this.clientData = searchPreference => {\n      if ('geolocation' in navigator) {\n        console.log('we can track you!');\n        navigator.geolocation.getCurrentPosition(async position => {\n          console.log(position.coords.latitude);\n          console.log(position.coords.longitude);\n          console.log('Title ' + searchPreference.title);\n          console.log('Price ' + searchPreference.price);\n          console.log('Radius ' + searchPreference.radius);\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          const term = searchPreference.title;\n          const price = searchPreference.price;\n          const radius = searchPreference.radius; //data object we are passing to the backend\n\n          const data = {\n            lat,\n            lon,\n            term,\n            price,\n            radius\n          }; //(object) second parameter of fetch that allows you to change settings\n\n          const options = {\n            method: 'POST',\n            //post, we are sending data to server\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data) //data contains the info we are sending to server\n\n          }; //fetch can also send data\n          //fetch sends data to server, also recieves data. Recived data is in response\n\n          const response = await fetch('/api', options);\n          const jsonData = await response.json();\n          let restaurantData = [];\n\n          for (let i = 0; i < 5; i++) {\n            //create array containing all restruant data\n            restaurantData.push(jsonData.jsonBody.businesses[i]); //console.log(jsonData.jsonBody.businesses[i].name  + jsonData.jsonBody.businesses[i].phone);\n          } //change state by changing array\n\n\n          this.setState({\n            results: restaurantData.slice()\n          });\n        });\n      } else {\n        console.log('Cant see your location');\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      clientData: this.clientData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Results, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nicholashui/Documents/Self/food-finder/client/src/App.js"],"names":["React","Select","Results","App","Component","state","results","clientData","searchPreference","navigator","console","log","geolocation","getCurrentPosition","position","coords","latitude","longitude","title","price","radius","lat","lon","term","data","options","method","headers","body","JSON","stringify","response","fetch","jsonData","json","restaurantData","i","push","jsonBody","businesses","setState","slice","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from './components/Select'\nimport Results from './components/Results';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    results: []\n  }\n\n  clientData = (searchPreference) => {\n    if('geolocation' in navigator){\n      console.log('we can track you!');\n\n      navigator.geolocation.getCurrentPosition(async position =>{\n        console.log(position.coords.latitude);\n        console.log(position.coords.longitude);\n        console.log('Title ' + searchPreference.title);\n        console.log('Price ' + searchPreference.price);\n        console.log('Radius ' + searchPreference.radius);\n\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        const term = searchPreference.title;\n        const price = searchPreference.price;\n        const radius = searchPreference.radius;\n\n        //data object we are passing to the backend\n        const data = {\n            lat,\n            lon,\n            term,\n            price,\n            radius\n        };\n\n        //(object) second parameter of fetch that allows you to change settings\n        const options = {\n            method: 'POST', //post, we are sending data to server\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data) //data contains the info we are sending to server\n        };\n        //fetch can also send data\n        //fetch sends data to server, also recieves data. Recived data is in response\n        const response = await fetch('/api', options);\n        \n        const jsonData = await response.json();\n        let restaurantData = [];\n        for(let i = 0; i < 5; i++){\n          //create array containing all restruant data\n          restaurantData.push(jsonData.jsonBody.businesses[i]);\n          //console.log(jsonData.jsonBody.businesses[i].name  + jsonData.jsonBody.businesses[i].phone);\n        }\n        //change state by changing array\n        \n        this.setState({\n          results: restaurantData.slice(),\n        })\n      });\n    }\n    else{\n      console.log('Cant see your location');\n    }\n  }\n  render(){\n    return (\n    <div className=\"App\">\n      <Select clientData={this.clientData}/>\n      <Results/>\n    </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}